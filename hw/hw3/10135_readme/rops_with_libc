Gadgets
=======
0x0000000000400552: adc byte ptr [rax], ah; jmp rax;
0x00000000004005a0: adc byte ptr [rax], ah; jmp rax; nop dword ptr [rax]; pop rb                                                                                            p; ret;
0x0000000000400552: adc byte ptr [rax], ah; jmp rax; nop word ptr [rax + rax]; p                                                                                            op rbp; ret;
0x0000000000400551: adc byte ptr [rax], spl; jmp rax;
0x000000000040059f: adc byte ptr [rax], spl; jmp rax; nop dword ptr [rax]; pop r                                                                                            bp; ret;
0x0000000000400551: adc byte ptr [rax], spl; jmp rax; nop word ptr [rax + rax];                                                                                             pop rbp; ret;
0x000000000040054e: adc dword ptr [rbp - 0x41], ebx; adc byte ptr [rax], spl; jm                                                                                            p rax;
0x000000000040054e: adc dword ptr [rbp - 0x41], ebx; adc byte ptr [rax], spl; jm                                                                                            p rax; nop word ptr [rax + rax]; pop rbp; ret;
0x00000000004006bf: add bl, dh; ret;
0x0000000000400597: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5                                                                                            d], 0xbf; adc byte ptr [rax], spl; jmp rax;
0x0000000000400549: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rdx + 0x5                                                                                            d], 0xbf; adc byte ptr [rax], spl; jmp rax;
0x00000000004005e4: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rsi*8 + 0                                                                                            x55], 0x48; mov ebp, esp; call rax;
0x00000000004006bd: add byte ptr [rax], al; add bl, dh; ret;
0x0000000000400595: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal b                                                                                            yte ptr [rbx + rcx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax;
0x0000000000400547: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal b                                                                                            yte ptr [rcx + rdx + 0x5d], 0xbf; adc byte ptr [rax], spl; jmp rax;
0x00000000004005e2: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal b                                                                                            yte ptr [rcx + rsi*8 + 0x55], 0x48; mov ebp, esp; call rax;
0x00000000004006bb: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh;                                                                                             ret;
0x0000000000400638: add byte ptr [rax], al; add byte ptr [rax], al; call 0x4c0;                                                                                             mov eax, 0; leave; ret;
0x000000000040055c: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret                                                                                            ;
0x0000000000400642: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret;
0x0000000000400643: add byte ptr [rax], al; add cl, cl; ret;
0x0000000000400493: add byte ptr [rax], al; add rsp, 8; ret;
0x000000000040063a: add byte ptr [rax], al; call 0x4c0; mov eax, 0; leave; ret;
0x000000000040055e: add byte ptr [rax], al; pop rbp; ret;
0x00000000004006c2: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret;
0x0000000000400548: add byte ptr [rax], al; test rax, rax; je 0x560; pop rbp; mo                                                                                            v edi, 0x601048; jmp rax;
0x0000000000400596: add byte ptr [rax], al; test rax, rax; je 0x5a8; pop rbp; mo                                                                                            v edi, 0x601048; jmp rax;
0x00000000004005e3: add byte ptr [rax], al; test rax, rax; je 0x5db; push rbp; m                                                                                            ov rbp, rsp; call rax;
0x0000000000400644: add byte ptr [rax], al; leave; ret;
0x0000000000400645: add cl, cl; ret;
0x00000000004005c4: add eax, 0x200a86; add ebx, esi; ret;
0x0000000000400486: add eax, 0x200b6d; test rax, rax; je 0x495; call 0x4f0; add                                                                                             rsp, 8; ret;
0x00000000004005c9: add ebx, esi; ret;
0x0000000000400496: add esp, 8; ret;
0x0000000000400495: add rsp, 8; ret;
0x00000000004005c7: and byte ptr [rax], al; add ebx, esi; ret;
0x0000000000400489: and byte ptr [rax], al; test rax, rax; je 0x495; call 0x4f0;                                                                                             add rsp, 8; ret;
0x000000000040063c: call 0x4c0; mov eax, 0; leave; ret;
0x0000000000400490: call 0x4f0; add rsp, 8; ret;
0x0000000000400717: call qword ptr [rax];
0x00000000004005f5: call qword ptr [rbp + 0x48];
0x000000000040079b: call qword ptr [rdx];
0x00000000004005ee: call rax;
0x000000000040069c: fmul qword ptr [rax - 0x7d]; ret;
0x000000000040048e: je 0x495; call 0x4f0; add rsp, 8; ret;
0x000000000040054d: je 0x560; pop rbp; mov edi, 0x601048; jmp rax;
0x000000000040059b: je 0x5a8; pop rbp; mov edi, 0x601048; jmp rax;
0x00000000004005e8: je 0x5db; push rbp; mov rbp, rsp; call rax;
0x00000000004007bb: jmp qword ptr [rbp];
0x0000000000400555: jmp rax;
0x00000000004005a3: jmp rax; nop dword ptr [rax]; pop rbp; ret;
0x0000000000400555: jmp rax; nop word ptr [rax + rax]; pop rbp; ret;
0x00000000004005c1: lcall ptr [rbp - 0x3a]; add eax, 0x200a86; add ebx, esi; ret                                                                                            ;
0x0000000000400641: mov eax, 0; leave; ret;
0x0000000000400485: mov eax, dword ptr [rip + 0x200b6d]; test rax, rax; je 0x495                                                                                            ; call 0x4f0; add rsp, 8; ret;
0x00000000004005ec: mov ebp, esp; call rax;
0x0000000000400637: mov edi, 0; call 0x4c0; mov eax, 0; leave; ret;
0x0000000000400550: mov edi, 0x601048; jmp rax;
0x000000000040059e: mov edi, 0x601048; jmp rax; nop dword ptr [rax]; pop rbp; re                                                                                            t;
0x0000000000400550: mov edi, 0x601048; jmp rax; nop word ptr [rax + rax]; pop rb                                                                                            p; ret;
0x0000000000400635: mov esi, eax; mov edi, 0; call 0x4c0; mov eax, 0; leave; ret                                                                                            ;
0x0000000000400484: mov rax, qword ptr [rip + 0x200b6d]; test rax, rax; je 0x495                                                                                            ; call 0x4f0; add rsp, 8; ret;
0x00000000004005eb: mov rbp, rsp; call rax;
0x0000000000400634: mov rsi, rax; mov edi, 0; call 0x4c0; mov eax, 0; leave; ret                                                                                            ;
0x0000000000400558: nop dword ptr [rax + rax]; pop rbp; ret;
0x00000000004005a5: nop dword ptr [rax]; pop rbp; ret;
0x0000000000400557: nop word ptr [rax + rax]; pop rbp; ret;
0x000000000040059c: or ebx, dword ptr [rbp - 0x41]; adc byte ptr [rax], spl; jmp                                                                                             rax;
0x000000000040059c: or ebx, dword ptr [rbp - 0x41]; adc byte ptr [rax], spl; jmp                                                                                             rax; nop dword ptr [rax]; pop rbp; ret;
0x00000000004006ac: pop r12; pop r13; pop r14; pop r15; ret;
0x00000000004006ae: pop r13; pop r14; pop r15; ret;
0x00000000004006b0: pop r14; pop r15; ret;
0x00000000004006b2: pop r15; ret;
0x000000000040054f: pop rbp; mov edi, 0x601048; jmp rax;
0x000000000040059d: pop rbp; mov edi, 0x601048; jmp rax; nop dword ptr [rax]; po                                                                                            p rbp; ret;
0x000000000040054f: pop rbp; mov edi, 0x601048; jmp rax; nop word ptr [rax + rax                                                                                            ]; pop rbp; ret;
0x00000000004006ab: pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x00000000004006af: pop rbp; pop r14; pop r15; ret;
0x0000000000400560: pop rbp; ret;
0x00000000004006b3: pop rdi; ret;
0x00000000004006b1: pop rsi; pop r15; ret;
0x00000000004006ad: pop rsp; pop r13; pop r14; pop r15; ret;
0x00000000004005ea: push rbp; mov rbp, rsp; call rax;
0x000000000040059a: sal byte ptr [rbx + rcx + 0x5d], 0xbf; adc byte ptr [rax], s                                                                                            pl; jmp rax;
0x000000000040054c: sal byte ptr [rcx + rdx + 0x5d], 0xbf; adc byte ptr [rax], s                                                                                            pl; jmp rax;
0x00000000004005e7: sal byte ptr [rcx + rsi*8 + 0x55], 0x48; mov ebp, esp; call                                                                                             rax;
0x00000000004006c5: sub esp, 8; add rsp, 8; ret;
0x00000000004006c4: sub rsp, 8; add rsp, 8; ret;
0x000000000040055a: test byte ptr [rax], al; add byte ptr [rax], al; add byte pt                                                                                            r [rax], al; pop rbp; ret;
0x000000000040048c: test eax, eax; je 0x495; call 0x4f0; add rsp, 8; ret;
0x000000000040054b: test eax, eax; je 0x560; pop rbp; mov edi, 0x601048; jmp rax                                                                                            ;
0x0000000000400599: test eax, eax; je 0x5a8; pop rbp; mov edi, 0x601048; jmp rax                                                                                            ;
0x00000000004005e6: test eax, eax; je 0x5db; push rbp; mov rbp, rsp; call rax;
0x000000000040048b: test rax, rax; je 0x495; call 0x4f0; add rsp, 8; ret;
0x000000000040054a: test rax, rax; je 0x560; pop rbp; mov edi, 0x601048; jmp rax                                                                                            ;
0x0000000000400598: test rax, rax; je 0x5a8; pop rbp; mov edi, 0x601048; jmp rax                                                                                            ;
0x00000000004005e5: test rax, rax; je 0x5db; push rbp; mov rbp, rsp; call rax;
0x00000000004005c5: xchg byte ptr [rdx], cl; and byte ptr [rax], al; add ebx, es                                                                                            i; ret;
0x00000000004005e9: int1; push rbp; mov rbp, rsp; call rax;
0x0000000000400646: leave; ret;
0x0000000000400499: ret;

101 gadgets found
